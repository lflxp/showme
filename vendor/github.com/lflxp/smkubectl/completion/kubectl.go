package completion

var kubectl = Completion{
	Level: "cmd",
	Cmd: []string{
		"COMMAND         DESCRIPTION",
		"Basic Commands (Beginner):",
		"create          Create a resource from a file or from stdin",
		"expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service",
		"run             在集群上运行特定镜像",
		"set             为对象设置指定特性",
		"Basic Commands (Intermediate):",
		"explain 	     Get documentation for a resource",
		"get             显示一个或多个资源",
		"edit            编辑服务器上的资源",
		"delete          Delete resources by file names, stdin, resources and names, or by resources and label selector",
		"Deploy Commands:",
		"rollout         Manage the rollout of a resource",
		"scale           Set a new size for a deployment, replica set, or replication controller",
		"autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller",
		"Cluster Management Commands:",
		"certificate     修改证书资源。",
		"cluster-info    Display cluster information",
		"top             Display resource (CPU/memory) usage",
		"cordon          标记节点为不可调度",
		"uncordon        标记节点为可调度",
		"drain           清空节点以准备维护",
		"taint           更新一个或者多个节点上的污点",
		"Troubleshooting and Debugging Commands:",
		"describe        显示特定资源或资源组的详细信息",
		"logs            打印 Pod 中容器的日志",
		"attach          挂接到一个运行中的容器",
		"exec            在某个容器中执行一个命令",
		"port-forward    将一个或多个本地端口转发到某个 Pod",
		"proxy           运行一个指向 Kubernetes API 服务器的代理",
		"cp              Copy files and directories to and from containers",
		"auth            Inspect authorization",
		"debug           Create debugging sessions for troubleshooting workloads and nodes",
		"Advanced Commands:",
		"diff            Diff the live version against a would-be applied version",
		"apply           Apply a configuration to a resource by file name or stdin",
		"patch           Update fields of a resource",
		"replace         Replace a resource by file name or stdin",
		"wait            Experimental: Wait for a specific condition on one or many resources",
		"kustomize       Build a kustomization target from a directory or URL.",
		"Settings Commands:",
		"label           更新某资源上的标签",
		"annotate        更新一个资源的注解",
		"completion      Output shell completion code for the specified shell (bash, zsh, fish, or powershell)",
		"Other Commands:",
		"alpha           Commands for features in alpha",
		"api-resources   Print the supported API resources on the server",
		"api-versions    Print the supported API versions on the server, in the form of 'group/version'",
		"config          修改 kubeconfig 文件",
		"plugin          Provides utilities for interacting with plugins",
		"version         输出客户端和服务端的版本信息",
	},
	Args:    []string{},
	IsShell: false,
	Daughter: map[string]Completion{
		"get": Completion{
			Level:   "get",
			IsShell: true,
			Shell:   "kubectl api-resources",
			Cmd: []string{"bindings", "componentstatuses", "configmaps", "endpoints", "events", "limitranges", "namespaces", "nodes", "persistentvolumeclaims", "persistentvolumes", "pods", "podtemplates", "replicationcontrollers", "resourcequotas", "secrets", "serviceaccounts", "services", "challenges", "orders", "mutatingwebhookconfigurations", "validatingwebhookconfigurations", "customresourcedefinitions", "apiservices", "controllerrevisions", "daemonsets", "deployments", "replicasets", "statefulsets", "applications", "applicationsets", "appprojects", "argocdextensions", "tokenreviews", "localsubjectaccessreviews", "selfsubjectaccessreviews", "selfsubjectrulesreviews", "subjectaccessreviews", "horizontalpodautoscalers", "cronjobs", "jobs", "certificaterequests", "certificates", "clusterissuers", "issuers", "certificatesigningrequests", "devworkspaceoperatorconfigs", "devworkspaceroutings", "leases", "bgpconfigurations", "bgppeers", "blockaffinities", "caliconodestatuses", "clusterinformations", "felixconfigurations", "globalnetworkpolicies", "globalnetworksets", "hostendpoints", "ipamblocks", "ipamconfigs", "ipamhandles", "ippools", "ipreservations", "kubecontrollersconfigurations", "networkpolicies", "networksets", "endpointslices", "events", "flowschemas", "prioritylevelconfigurations", "departments", "licenses", "products", "projects", "roletemplatebindings", "roletemplates", "users", "workzooms", "clusterpolicies", "clusterreportchangerequests", "generaterequests", "policies", "reportchangerequests", "updaterequests", "nodes", "pods", "alertmanagerconfigs", "alertmanagers", "podmonitors", "probes", "prometheuses", "prometheusrules", "servicemonitors", "thanosrulers", "ingressclasses", "ingresses", "networkpolicies", "runtimeclasses", "checlusters", "poddisruptionbudgets", "clusterrolebindings", "clusterroles", "rolebindings", "roles", "priorityclasses", "csidrivers", "csinodes", "csistoragecapacities", "storageclasses", "volumeattachments", "clusterpolicyreports", "policyreports", "devworkspaces", "devworkspacetemplates",
				"cs", "cm", "ep", "ev", "limits", "ns", "no", "pvc", "pv", "po", "rc", "quota", "sa", "svc", "crd", "crds", "ds", "deploy", "rs", "sts", "app", "apps", "appset", "appsets", "appproj", "appprojs", "hpa", "cj", "cr", "crs", "cert", "certs", "csr", "dwoc", "dwr", "ev", "dep", "cpol", "crcr", "gr", "pol", "rcr", "ur", "amcfg", "am", "pmon", "prb", "prom", "promrule", "smon", "ruler", "ing", "netpol", "pdb", "pc", "sc", "cpolr", "polr", "dw", "dwt",
			},
		},
		"edit": Completion{
			Level:   "edit",
			IsShell: true,
			Shell:   "kubectl api-resources",
			Cmd: []string{"bindings", "componentstatuses", "configmaps", "endpoints", "events", "limitranges", "namespaces", "nodes", "persistentvolumeclaims", "persistentvolumes", "pods", "podtemplates", "replicationcontrollers", "resourcequotas", "secrets", "serviceaccounts", "services", "challenges", "orders", "mutatingwebhookconfigurations", "validatingwebhookconfigurations", "customresourcedefinitions", "apiservices", "controllerrevisions", "daemonsets", "deployments", "replicasets", "statefulsets", "applications", "applicationsets", "appprojects", "argocdextensions", "tokenreviews", "localsubjectaccessreviews", "selfsubjectaccessreviews", "selfsubjectrulesreviews", "subjectaccessreviews", "horizontalpodautoscalers", "cronjobs", "jobs", "certificaterequests", "certificates", "clusterissuers", "issuers", "certificatesigningrequests", "devworkspaceoperatorconfigs", "devworkspaceroutings", "leases", "bgpconfigurations", "bgppeers", "blockaffinities", "caliconodestatuses", "clusterinformations", "felixconfigurations", "globalnetworkpolicies", "globalnetworksets", "hostendpoints", "ipamblocks", "ipamconfigs", "ipamhandles", "ippools", "ipreservations", "kubecontrollersconfigurations", "networkpolicies", "networksets", "endpointslices", "events", "flowschemas", "prioritylevelconfigurations", "departments", "licenses", "products", "projects", "roletemplatebindings", "roletemplates", "users", "workzooms", "clusterpolicies", "clusterreportchangerequests", "generaterequests", "policies", "reportchangerequests", "updaterequests", "nodes", "pods", "alertmanagerconfigs", "alertmanagers", "podmonitors", "probes", "prometheuses", "prometheusrules", "servicemonitors", "thanosrulers", "ingressclasses", "ingresses", "networkpolicies", "runtimeclasses", "checlusters", "poddisruptionbudgets", "clusterrolebindings", "clusterroles", "rolebindings", "roles", "priorityclasses", "csidrivers", "csinodes", "csistoragecapacities", "storageclasses", "volumeattachments", "clusterpolicyreports", "policyreports", "devworkspaces", "devworkspacetemplates",
				"cs", "cm", "ep", "ev", "limits", "ns", "no", "pvc", "pv", "po", "rc", "quota", "sa", "svc", "crd", "crds", "ds", "deploy", "rs", "sts", "app", "apps", "appset", "appsets", "appproj", "appprojs", "hpa", "cj", "cr", "crs", "cert", "certs", "csr", "dwoc", "dwr", "ev", "dep", "cpol", "crcr", "gr", "pol", "rcr", "ur", "amcfg", "am", "pmon", "prb", "prom", "promrule", "smon", "ruler", "ing", "netpol", "pdb", "pc", "sc", "cpolr", "polr", "dw", "dwt",
			},
		},
		"delete": Completion{
			Level:   "delete",
			IsShell: true,
			Shell:   "kubectl api-resources",
			Cmd: []string{"bindings", "componentstatuses", "configmaps", "endpoints", "events", "limitranges", "namespaces", "nodes", "persistentvolumeclaims", "persistentvolumes", "pods", "podtemplates", "replicationcontrollers", "resourcequotas", "secrets", "serviceaccounts", "services", "challenges", "orders", "mutatingwebhookconfigurations", "validatingwebhookconfigurations", "customresourcedefinitions", "apiservices", "controllerrevisions", "daemonsets", "deployments", "replicasets", "statefulsets", "applications", "applicationsets", "appprojects", "argocdextensions", "tokenreviews", "localsubjectaccessreviews", "selfsubjectaccessreviews", "selfsubjectrulesreviews", "subjectaccessreviews", "horizontalpodautoscalers", "cronjobs", "jobs", "certificaterequests", "certificates", "clusterissuers", "issuers", "certificatesigningrequests", "devworkspaceoperatorconfigs", "devworkspaceroutings", "leases", "bgpconfigurations", "bgppeers", "blockaffinities", "caliconodestatuses", "clusterinformations", "felixconfigurations", "globalnetworkpolicies", "globalnetworksets", "hostendpoints", "ipamblocks", "ipamconfigs", "ipamhandles", "ippools", "ipreservations", "kubecontrollersconfigurations", "networkpolicies", "networksets", "endpointslices", "events", "flowschemas", "prioritylevelconfigurations", "departments", "licenses", "products", "projects", "roletemplatebindings", "roletemplates", "users", "workzooms", "clusterpolicies", "clusterreportchangerequests", "generaterequests", "policies", "reportchangerequests", "updaterequests", "nodes", "pods", "alertmanagerconfigs", "alertmanagers", "podmonitors", "probes", "prometheuses", "prometheusrules", "servicemonitors", "thanosrulers", "ingressclasses", "ingresses", "networkpolicies", "runtimeclasses", "checlusters", "poddisruptionbudgets", "clusterrolebindings", "clusterroles", "rolebindings", "roles", "priorityclasses", "csidrivers", "csinodes", "csistoragecapacities", "storageclasses", "volumeattachments", "clusterpolicyreports", "policyreports", "devworkspaces", "devworkspacetemplates",
				"cs", "cm", "ep", "ev", "limits", "ns", "no", "pvc", "pv", "po", "rc", "quota", "sa", "svc", "crd", "crds", "ds", "deploy", "rs", "sts", "app", "apps", "appset", "appsets", "appproj", "appprojs", "hpa", "cj", "cr", "crs", "cert", "certs", "csr", "dwoc", "dwr", "ev", "dep", "cpol", "crcr", "gr", "pol", "rcr", "ur", "amcfg", "am", "pmon", "prb", "prom", "promrule", "smon", "ruler", "ing", "netpol", "pdb", "pc", "sc", "cpolr", "polr", "dw", "dwt",
			},
		},
		"describe": Completion{
			Level:   "delete",
			IsShell: true,
			Shell:   "kubectl api-resources",
			Cmd: []string{"bindings", "componentstatuses", "configmaps", "endpoints", "events", "limitranges", "namespaces", "nodes", "persistentvolumeclaims", "persistentvolumes", "pods", "podtemplates", "replicationcontrollers", "resourcequotas", "secrets", "serviceaccounts", "services", "challenges", "orders", "mutatingwebhookconfigurations", "validatingwebhookconfigurations", "customresourcedefinitions", "apiservices", "controllerrevisions", "daemonsets", "deployments", "replicasets", "statefulsets", "applications", "applicationsets", "appprojects", "argocdextensions", "tokenreviews", "localsubjectaccessreviews", "selfsubjectaccessreviews", "selfsubjectrulesreviews", "subjectaccessreviews", "horizontalpodautoscalers", "cronjobs", "jobs", "certificaterequests", "certificates", "clusterissuers", "issuers", "certificatesigningrequests", "devworkspaceoperatorconfigs", "devworkspaceroutings", "leases", "bgpconfigurations", "bgppeers", "blockaffinities", "caliconodestatuses", "clusterinformations", "felixconfigurations", "globalnetworkpolicies", "globalnetworksets", "hostendpoints", "ipamblocks", "ipamconfigs", "ipamhandles", "ippools", "ipreservations", "kubecontrollersconfigurations", "networkpolicies", "networksets", "endpointslices", "events", "flowschemas", "prioritylevelconfigurations", "departments", "licenses", "products", "projects", "roletemplatebindings", "roletemplates", "users", "workzooms", "clusterpolicies", "clusterreportchangerequests", "generaterequests", "policies", "reportchangerequests", "updaterequests", "nodes", "pods", "alertmanagerconfigs", "alertmanagers", "podmonitors", "probes", "prometheuses", "prometheusrules", "servicemonitors", "thanosrulers", "ingressclasses", "ingresses", "networkpolicies", "runtimeclasses", "checlusters", "poddisruptionbudgets", "clusterrolebindings", "clusterroles", "rolebindings", "roles", "priorityclasses", "csidrivers", "csinodes", "csistoragecapacities", "storageclasses", "volumeattachments", "clusterpolicyreports", "policyreports", "devworkspaces", "devworkspacetemplates",
				"cs", "cm", "ep", "ev", "limits", "ns", "no", "pvc", "pv", "po", "rc", "quota", "sa", "svc", "crd", "crds", "ds", "deploy", "rs", "sts", "app", "apps", "appset", "appsets", "appproj", "appprojs", "hpa", "cj", "cr", "crs", "cert", "certs", "csr", "dwoc", "dwr", "ev", "dep", "cpol", "crcr", "gr", "pol", "rcr", "ur", "amcfg", "am", "pmon", "prb", "prom", "promrule", "smon", "ruler", "ing", "netpol", "pdb", "pc", "sc", "cpolr", "polr", "dw", "dwt",
			},
		},
		"cp": Completion{
			Level:   "cp",
			IsShell: true,
			Shell:   "kubectl get po -A",
		},
		"create": Completion{
			Level: "create",
			Cmd: []string{
				"COMMANDS              DESCRIPTION",
				"clusterrole           Create a cluster role",
				"clusterrolebinding    Create a cluster role binding for a particular cluster role",
				"configmap             Create a config map from a local file, directory or literal value",
				"cronjob               Create a cron job with the specified name",
				"deployment            Create a deployment with the specified name",
				"ingress               Create an ingress with the specified name",
				"job                   Create a job with the specified name",
				"namespace             用指定的名称创建一个命名空间",
				"poddisruptionbudget   Create a pod disruption budget with the specified name",
				"priorityclass         Create a priority class with the specified name",
				"quota                 Create a quota with the specified name",
				"role                  Create a role with single rule",
				"rolebinding           Create a role binding for a particular role or cluster role",
				"secret                使用指定的子命令创建一个 Secret",
				"service               Create a service using a specified subcommand",
				"serviceaccount        创建一个指定名称的服务账户",
				"token                 Request a service account token",
			},
		},
		"rollout": Completion{
			Level: "rollout",
			Cmd: []string{
				"COMMANDS      DESCRIPTION",
				"history       显示上线历史",
				"pause         将所指定的资源标记为已暂停",
				"restart       Restart a resource",
				"resume        恢复暂停的资源",
				"status        显示上线的状态",
				"undo          撤销上一次的上线",
			},
		},
		"set": Completion{
			Level: "set",
			Cmd: []string{
				"COMMANDS => Usage: kubectl set SUBCOMMAND [options]",
				"env              Update environment variables on a pod template",
				"image            Update the image of a pod template",
				"resources        使用 Pod 模板更新对象的资源请求/限制",
				"selector         为资源设置选择器",
				"serviceaccount   Update the service account of a resource",
				"subject          Update the user, group, or service account in a role binding or cluster role binding",
			},
		},
		"logs": Completion{
			Level: "logs",
			Args: []string{
				"OPTIONS                                    DESCRIPTION",
				"--all-containers=false                     Get all containers' logs in the pod(s).",
				"-c --container=''                          Print the logs of this container",
				"-f --follow=false                          Specify if the logs should be streamed.",
				"--ignore-errors=false                      If watching / following pod logs, allow for any errors   that occur to be non-fatal",
				"--insecure-skip-tls-verify-backend=false   Skip verifying the identity of the kubelet that logs are requested from.  In theory, an attacker could provide invalid log content back. You might want to use this if your kubelet serving certificates have expired.",
				"--limit-bytes=0                            Maximum bytes of logs to return. Defaults to no limit.",
				"--max-log-requests=5                       Specify maximum number of concurrent logs to follow when using by a selector. Defaults to 5.",
				"--pod-running-timeout=20s                  The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running",
				"--prefix=false                             Prefix each log line with the log source (pod name and container name)",
				"-p --previous=false                        If true, print the logs for the previous instance of the container in a pod if it exists.",
				"-l --selector=''                           Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2). Matching objects must satisfy all of the specified label constraints.",
				"--since=0s                                 Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of since-time / since may be used.",
				"--since-time=''                            仅返回在指定日期 (RFC3339) 之后的日志。默认为所有日志。只能使用 since-time / since 之一。",
				"--tail=-1                                  Lines of recent log file to display. Defaults to -1 with no selector, showing all log lines otherwise 10, if a selector is provided.",
				"--timestamps=false                         Include timestamps on each line in the log output",
			},
		},
		"certificate": Completion{
			Level: "修改证书资源",
			Cmd: []string{
				"COMMANDS      DESCRIPTION => Usage: kubectl certificate SUBCOMMAND [options]",
				"approve       批准一个证书签署请求",
				"deny          拒绝一个证书签名请求",
			},
		},
		"top": Completion{
			Level: "top",
			Cmd: []string{
				"COMMANDS      DESCRIPTION => Usage: kubectl top [flags] [options]",
				"node          Display resource (CPU/memory) usage of nodes",
				"pod           Display resource (CPU/memory) usage of pods",
			},
		},
		"cluster-info": Completion{
			Level: "cluster-info",
			Cmd: []string{
				"COMMANDS      DESCRIPTION => Usage: kubectl cluster-info [flags] [options]",
				"dump          Dump relevant information for debugging and diagnosis",
			},
		},
		"auth": Completion{
			Level: "auth",
			Cmd: []string{
				"COMMANDS      DESCRIPTION => Usage: kubectl auth [flags] [options]",
				"can-i         Check whether an action is allowed",
				"reconcile     Reconciles rules for RBAC role, role binding, cluster role, and cluster role binding objects",
			},
		},
		"apply": Completion{
			Level: "apply",
			Cmd: []string{
				"COMMANDS            DESCRIPTION => Usage: kubectl auth [flags] [options]",
				"edit-last-applied   Edit latest last-applied-configuration annotations of a resource/object",
				"set-last-applied    Set the last-applied-configuration annotation on a live object to match the contents of a file",
				"view-last-applied   View the latest last-applied-configuration annotations of a resource/object",
			},
		},
		"alpha": Completion{
			Level: "alpha",
			Cmd: []string{
				"COMMANDS      DESCRIPTION",
				"events        Experimental: List events",
			},
		},
		"plugin": Completion{
			Level: "alpha",
			Cmd: []string{
				"COMMANDS      DESCRIPTION",
				"list          List all visible plugin executables on a user's PATH",
			},
		},
		"api-resources": Completion{
			Level: "api-resources",
			Args: []string{
				"ARGS                DESCRIPTION",
				"--api-group=''      Limit to resources in the specified API group.",
				"--cached=false      Use the cached list of resources if available.",
				"--namespaced=true   If false, non-namespaced resources will be returned, otherwise returning namespaced resources by default.",
				"--no-headers=false  When using the default or custom-column output format, don't print headers (default print headers).",
				"-o                  --output='' Output format. One of: (wide, name).",
				"--sort-by=''        If non-empty, sort list of resources using specified field. The field can be either 'name' or 'kind'.",
				"--verbs=[]          Limit to resources that support the specified verbs.",
			},
		},
		"config": Completion{
			Level: "config",
			Cmd: []string{
				"COMMANDS          DESCRIPTION",
				"current-context   Display the current-context",
				"delete-cluster    从 kubeconfig 中删除指定的集群",
				"delete-context    从 kubeconfig 中删除指定的上下文",
				"delete-user       Delete the specified user from the kubeconfig",
				"get-clusters      显示在 kubeconfig 中定义的集群",
				"get-contexts      描述一个或多个上下文",
				"get-users         Display users defined in the kubeconfig",
				"rename-context    Rename a context from the kubeconfig file",
				"set               Set an individual value in a kubeconfig file",
				"set-cluster       Set a cluster entry in kubeconfig",
				"set-context       Set a context entry in kubeconfig",
				"set-credentials   Set a user entry in kubeconfig",
				"unset             Unset an individual value in a kubeconfig file",
				"use-context       Set the current-context in a kubeconfig file",
				"view              显示合并的 kubeconfig 配置或一个指定的 kubeconfig 文件",
			},
		},
		"-n": Completion{
			Level:   "args",
			IsShell: true,
			Shell:   "kubectl get ns",
		},
		"-o": Completion{
			Level: "args",
			Cmd: []string{
				"ARGS (https://kubernetes.io/docs/reference/kubectl/#custom-columns)", "json", "yaml", "name", "go-template", "go-template-file", "template", "templatefile", "jsonpath", "jsonpath-as-json", "jsonpath-file", "custom-columns", "custom-columns-file", "wide",
			},
		},
		"-l": Completion{
			Level:   "show labels",
			IsShell: true,
			Shell:   "kubectl get po --show-labels|sed 1d|awk '{print $6}'",
		},
		"-f": Completion{
			Level:   "show logs",
			IsShell: true,
			Shell:   "kubectl get po -A",
		},
		"-c": Completion{
			Level:       "show containers",
			IsShell:     true,
			IsCondition: true,
			Condition:   []string{"^(k|kubectl).*.(logs|-f|-n).*"},
			Shell:       ` -o jsonpath='{.spec.containers[*].name}'|tr ' ' '\n'`,
		},
	},
}
